# お客様の来賓の発券システム

## システム構成

- フロントエンド: Next.js (SSR/CSR) - 最小限のクライアントサイド処理
- バックエンド: Next.js API Routes - シンプルなAPIエンドポイント
- データ永続化: Google Spreadsheet API - 複雑なDB設計を避け、表形式での管理

### 社員が入力

- **お客さんの名前**: お客様のフルネームを入力します。
- **受け入れ担当者**: お客様を受け入れる担当者の名前を入力します。
- **来社目的**: お客様の来社目的を入力します。
- **滞在時間**: お客様の滞在予定時間を入力します。

### お客さんが来館当日にやること

- **注意書きの読了チェック**: 注意書きを読み、確認したことをチェックします。
- **発券番号の入力**: 発券システムに発券番号を入力します。

## 技術スタック

- **フレームワーク**: Next.js (App Router) - シンプルな構成で高速な開発を実現
- **言語**: TypeScript - 基本的な型定義のみ使用
- **UI**: Tailwind CSS - ユーティリティファーストで素早いスタイリング
- **データ管理**: Google Spreadsheet - セットアップが容易で直感的な操作が可能

## コーディングスタイル

ハッカソンでの素早い実装を目指し、シンプルで軽量なアプローチを採用します。
最小限の機能から始め、必要に応じて段階的に機能を追加できる設計とします。
